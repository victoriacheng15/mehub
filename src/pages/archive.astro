---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { filterPublishedPosts, sortPostsByDate } from '../utils/posts';
import PostDate from '../components/PostDate.astro';

const posts = await getCollection('blog');
const publishedPosts = filterPublishedPosts(posts);
const sortedPosts = sortPostsByDate(publishedPosts);

// Group posts by year
const postsByYear = sortedPosts.reduce((acc, post) => {
  const year = post.data.date.getFullYear();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {} as Record<number, typeof sortedPosts>);

const years = Object.keys(postsByYear).sort((a, b) => Number(b) - Number(a));
const currentYear = new Date().getFullYear();
---

<BaseLayout title="Archive">
  <h1 class="text-4xl font-bold mb-8 text-secondary-100">Archive</h1>
  
  {years.map(year => 
  Number(year) === currentYear ? (
    <details open class="mb-4">
      <summary class="text-xl text-secondary-100 mb-2">{year}</summary>
        <ul class="space-y-4">
          {postsByYear[year].map(post => (
            <li class="flex items-baseline gap-4">
              <span class="whitespace-nowrap">
                <PostDate date={post.data.date} />
              </span>
              <a 
                href={`/blog/${post.id}`}
                class="text-primary-50 hover:text-secondary-100"
              >
                {post.data.title}
              </a>
            </li>
        ))} 
      </ul>
    </details>
  ) : (
  <details  class="mb-4">
      <summary class="text-secondary-100 text-xl mb-2">{year}</summary>
        <ul class="space-y-4">
          {postsByYear[year].map(post => (
            <li class="flex items-baseline gap-4">
              <span class="whitespace-nowrap">
                <PostDate date={post.data.date} />
              </span>
              <a 
                href={`/blog/${post.id}`}
                class="text-primary-50 hover:text-secondary-100"
              >
                {post.data.title}
              </a>
            </li>
        ))} 
      </ul>
    </details>
  )
  )}
</BaseLayout>

<!-- <section class="mb-12">
  <h2 class="text-2xl font-bold mb-4 text-primary-100">{year}</h2>
  <ul class="space-y-4">
    {postsByYear[year].map(post => (
      <li class="flex items-baseline gap-4">
        <span class="text-sm whitespace-nowrap">
          <PostDate date={post.data.date} />
        </span>
        <a 
          href={`/blog/${post.id}`}
          class="text-primary-50 hover:text-secondary-100"
        >
          {post.data.title}
        </a>
      </li>
    ))}
  </ul>
</section> -->