---
import BaseLayout from "@/layouts/BaseLayout";
import PostDate from "@/components/PostDate";
import { currentYear, getAllSortedPosts } from "@/utils";

const sortedPosts = await getAllSortedPosts();

const postsByYear = sortedPosts.reduce(
	(acc, post) => {
		const year = post.data.date.getFullYear();
		if (!acc[year]) {
			acc[year] = [];
		}
		acc[year].push(post);
		return acc;
	},
	{} as Record<number, typeof sortedPosts>,
);

const years = Object.keys(postsByYear).sort((a, b) => Number(b) - Number(a));
---

<BaseLayout title="Archive" description="A collection of my archived posts.">
	<h1 class="text-secondary-300 mb-8 text-4xl font-bold">Archive</h1>
	{
		years.map((year) =>
			Number(year) === currentYear ? (
				<details open class="mb-4">
					<summary class="text-secondary-300 mb-2 text-xl">{year}</summary>
					<ul class="space-y-4">
						{postsByYear[year].map((post) => (
							<li class="flex items-baseline gap-4">
								<span class="whitespace-nowrap">
									<PostDate date={post.data.date} />
								</span>
								<a
									href={`/blog/${post.id}`}
									class="hover:text-secondary-200 duration-300 ease-in-out"
								>
									{post.data.title}
								</a>
							</li>
						))}
					</ul>
				</details>
			) : (
				<details class="mb-4">
					<summary class="text-secondary-300 mb-2 text-xl">{year}</summary>
					<ul class="space-y-4">
						{postsByYear[year].map((post) => (
							<li class="flex items-baseline gap-4">
								<span class="whitespace-nowrap">
									<PostDate date={post.data.date} />
								</span>
								<a
									href={`/blog/${post.id}`}
									class="hover:text-secondary-200 duration-300 ease-in-out"
								>
									{post.data.title}
								</a>
							</li>
						))}
					</ul>
				</details>
			),
		)
	}
</BaseLayout>
